generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int                @id @default(autoincrement())
  email     String             @unique
  password  String
  courses   RegisteredCourse[] // Each user can be registered for multiple courses
  expenses  Expense[]          // User can have multiple expenses
}

model Course {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  credits     Int
  instructor  String
  videoUrl    String?
  subjects    Subject[]  // A course can have multiple subjects
  users       RegisteredCourse[] // A course can have multiple registered students
}

model Subject {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  videoUrl    String?
  credits     Int
  instructor  String
  courseId    Int      // Foreign key linking to Course
  course      Course   @relation(fields: [courseId], references: [id]) // Relationship to Course
  createdAt   DateTime @default(now())
}

model RegisteredCourse {
  id        Int     @id @default(autoincrement())
  name      String
  semester  String
  grade     String?
  courseId  Int     // Foreign key linking to Course
  userId    Int     // Foreign key linking to User
  user      User    @relation(fields: [userId], references: [id])
  course    Course  @relation(fields: [courseId], references: [id])
}
model Expense {
  id          Int      @id @default(autoincrement())
  amount      Float
  description String
  category    String
  date        DateTime
  userId      Int      // Foreign key linking to User
  user        User     @relation(fields: [userId], references: [id])
}

